#!/bin/bash

set -eo pipefail

cd $(dirname "${BASH_SOURCE[0]}")/..

stack=$1
lifecycle_ref=$2
samples_tgz=https://api.github.com/repos/buildpack/samples/tarball/master
buildpack_dir=$(pwd)/images/detect/buildpacks
nodejs_dir=$buildpack_dir/sh.packs.samples.buildpack.nodejs/latest

if [[ -z $stack ]]; then
  >&2 echo "Stack not specified."
  exit 1
fi

rm -rf "$buildpack_dir"
mkdir -p "$nodejs_dir"

if [[ $(uname) = Linux ]]; then
  curl -sSL "$samples_tgz" | tar -xzf - -C "$nodejs_dir" --strip-components=2 --wildcards 'buildpack-samples-*/nodejs-buildpack'
else
  curl -sSL "$samples_tgz" | tar -xzf - -C "$nodejs_dir" --strip-components=2 'buildpack-samples-*/nodejs-buildpack'
fi

version_dir=$(dirname "$nodejs_dir")/$(cat "$nodejs_dir/buildpack.toml" | yj -t | jq -r .version)
mv "$nodejs_dir" "$version_dir"
ln -s "$(basename "$version_dir")" "$nodejs_dir"

echo 'groups = [{ repository = "packs/v3", buildpacks = [{ id = "sh.packs.samples.buildpack.nodejs", version = "latest" }] }]' > "$buildpack_dir/order.toml"

docker pull "${stack}"

if [[ -n $lifecycle_ref ]]; then
  docker build --build-arg "stack=${stack}" --build-arg "lifecycle_ref=${lifecycle_ref}" -t packs/v3:latest -f images/Dockerfile.base .
else
  docker build --build-arg "stack=${stack}" -t packs/v3:latest -f images/Dockerfile.base .
fi
docker build -t packs/v3:detect images/detect
docker build -t packs/v3:build images/build
docker build -t packs/v3:run images/run

